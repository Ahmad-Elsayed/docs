openapi: 3.0.3
x-stoplight:
  id: h451lkumf4xm6
info:
  title: Pipeline API
  version: 1.0.0
  contact:
    name: Mendix Support
    url: 'https://support.mendix.com'
    email: support@mendix.com
  termsOfService: 'https://www.mendix.com/terms-of-use/'
  license:
    name: '@Mendix.com'
    url: 'https://www.mendix.com'
  description: The API to manage pipelines
servers:
  - url: 'https://domain.tld/api/v1'
tags:
  - name: pipeline
    description: collection of the pipeline operations
  - name: run
    description: collection of the run operations
paths:
  '/apps/{appId}/runs':
    parameters:
      - $ref: '#/components/parameters/appId'
    post:
      tags:
        - run
      description: start new run for a given pipeline
      operationId: startRun
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pipelineId:
                  type: string
                  example: db6ed4d3-8b6d-4c2b-ad2b-2a69d0f7afe0
                  format: uuid
                  description: UUID of the pipeline
              required:
                - pipelineId
      responses:
        '201':
          $ref: '#/components/responses/runStarted'
        '400':
          $ref: '#/components/responses/error400'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
      x-stoplight:
        id: fqdwjj9lcsugf
  '/apps/{appId}/runs/{runId}/status':
    parameters:
      - $ref: '#/components/parameters/appId'
      - $ref: '#/components/parameters/runId'
    get:
      tags:
        - run
      description: get status of the run
      operationId: getRunStatus
      responses:
        '200':
          $ref: '#/components/responses/runStatus'
        '400':
          $ref: '#/components/responses/error400'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
      x-stoplight:
        id: b2ntkujwhgwjc
components:
  parameters:
    appId:
      name: appId
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: c533ee0b-f7db-4e62-868b-1192d392ccec
      description: The ID of a Sprintr project or app
    runId:
      name: runId
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: 2868b153-2d92-4ec5-ab64-2e26a9e0f16e
      description: The ID of a run
  schemas:
    error:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/error-body'
      description: The error body in an error object
      x-stoplight:
        id: sxeys55uppr0r
    error-body:
      description: The body of an error object explaining what happened.
      type: object
      properties:
        code:
          type: integer
          minimum: 0
          description: The HTTP status code.
          example: 400
        message:
          type: string
          description: Explanation of what happened.
          example: Request validation errors
        invalid-params:
          type: array
          uniqueItems: true
          minItems: 1
          description: RFC7807 compatible list with detailed feedback.
          items:
            type: object
            properties:
              name:
                type: string
                example: query-parameter
                description: The group or type this messages is for.
              reason:
                type: string
                example: Value 'license' is not supported
                description: Feedback what is wrong or expected.
            required:
              - name
              - reason
      required:
        - code
        - message
      x-stoplight:
        id: 9mss4dvlh4ovs
    run:
      description: The body of a run object gives details about run
      type: object
      properties:
        id:
          $ref: '#/components/schemas/runId'
        pipelineId:
          $ref: '#/components/schemas/pipelineId'
        pipelineName:
          type: string
          title: pipelineName
          example: Test pipeline
        triggeredBy:
          $ref: '#/components/schemas/user'
      required:
        - id
        - pipelineId
        - pipelineName
        - triggeredBy
      x-stoplight:
        id: 6uktlpbg6wyg8
    runStatus:
      description: The body of a run status object gives details about run status
      type: object
      properties:
        runId:
          $ref: '#/components/schemas/runId'
        status:
          $ref: '#/components/schemas/runStatusEnum'
      required:
        - runId
        - status
      x-stoplight:
        id: 5yystu7dgim3c
    runId:
      description: The unique run Id in UUID format
      type: string
      title: runId
      format: uuid
      example: 2868b153-2d92-4ec5-ab64-2e26a9e0f16e
      x-stoplight:
        id: unm31s8peb2h0
    pipelineId:
      description: The unique pipeline Id in UUID format
      type: string
      title: pipelineId
      format: uuid
      example: db6ed4d3-8b6d-4c2b-ad2b-2a69d0f7afe0
      x-stoplight:
        id: 9g47ikr3k96m4
    runStatusEnum:
      description: The run status enum represent pipeline run status
      type: string
      title: runStatusEnum
      enum:
        - CREATED
        - RUNNING
        - SUCCEEDED
        - FAILED
      x-stoplight:
        id: my4j6mo44r8vh
    user:
      description: The body of the user gives details about the user
      title: user
      x-stoplight:
        id: h8ru7dslp7qnt
      type: object
      properties:
        email:
          type: string
          format: email
          example: jane.doe@domain.tld
          x-stoplight:
            id: dumuouqb8wwdz
  responses:
    error400:
      description: |-
        The request likely contains invalid data or is missing data.

        The error response gives additional feedback.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    error401:
      description: |-
        There were no usable authentication credentials found.

        The error response gives additional feedback.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          examples:
            Example:
              value:
                error:
                  code: 401
                  message: Unauthorized
                  invalid-params:
                    - name: Authentication
                      reason: Missing or invalid Authorization header
    error403:
      description: |-
        Access is denied. The provided credentials are incorrect or the credentials do not have the required level of access.

        The error response gives additional feedback.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          examples:
            Example:
              value:
                error:
                  code: 403
                  message: Forbidden
                  invalid-params:
                    - name: Authentication
                      reason: The token is not accepted
    error404:
      description: |-
        The requested item could not be found.

        The error response gives additional feedback.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          examples:
            Example:
              value:
                error:
                  code: 404
                  message: App not found
                  invalid-params:
                    - name: Validation
                      reason: App 76ef1b0f-4050-4810-a159-cb419268636c could not be found
    runStarted:
      description: The response with the run details. Use the Content-Location header to request the run's status.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/run'
          examples:
            Run started:
              value:
                id: 2868b153-2d92-4ec5-ab64-2e26a9e0f16e
                pipelineId: db6ed4d3-8b6d-4c2b-ad2b-2a69d0f7afe0
                pipelineName: Test pipeline
                triggeredBy:
                  email: jane.doe@domain.tld
      headers:
        Content-Location:
          schema:
            type: string
            example: apps/c533ee0b-f7db-4e62-868b-1192d392ccec/runs/2868b153-2d92-4ec5-ab64-2e26a9e0f16e
            format: uri-reference
          description: Url where to get the status of this run
    runStatus:
      description: The response for the run status for given run id
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/runStatus'
          examples:
            Running status:
              value:
                runId: 2868b153-2d92-4ec5-ab64-2e26a9e0f16e
                status: RUNNING
            Succeeded status:
              value:
                runId: 2868b153-2d92-4ec5-ab64-2e26a9e0f16e
                status: SUCCEEDED
  securitySchemes:
    PersonalAccessToken:
      type: http
      scheme: MxToken
      description: 'This is a special type and see this page for documentation how to request a token and how to use it: https://docs.mendix.com/community-tools/mendix-profile/user-settings/#pat'
security:
  - PersonalAccessToken: []
